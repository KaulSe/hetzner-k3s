name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: true
          generate_release_notes: false

  build_release_x64:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [macos-latest]
        include:
          # - os: macos-latest
          #   release_suffix: mac-amd64
          - os: ubuntu-latest
            release_suffix: linux-x86_64
          # - os: windows-latest
          #   release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Mac Build x64
        if: matrix.os == 'macos-latest'
        run: |
          brew install crystal libssh2
          shards install --without-development
          crystal build src/hetzner-k3s.cr --release
          chmod +x hetzner-k3s
          cp hetzner-k3s hetzner-k3s-${{ matrix.release_suffix }}

      # - name: Setup latest Alpine Linux
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: jirutka/setup-alpine@v1

      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        # shell: alpine.sh --root {0}
        run: |
          curl -fsSL https://crystal-lang.org/install.sh | sudo bash
          sudo apt install libssh2-1
          shards install --without-development
          crystal build src/hetzner-k3s.cr --release
          chmod +x hetzner-k3s
          cp hetzner-k3s hetzner-k3s-${{ matrix.release_suffix }}

      # - name: Run Windows Build
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     choco install --no-progress squashfs
      #     choco install wget
      #     choco install strawberryperl
      #     echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
      #     wget https://github.com/pmq20/ruby-packer/releases/download/windows-x64/rubyc.exe
      #     call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      #     rubyc.exe  -r ./ -o ./hetzner-k3s-${{ matrix.release_suffix }} exe/hetzner-k3s

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: hetzner-k3s-${{ matrix.release_suffix }}


  # build_release_arm:
    # name: Build Release
    # needs: create_release
    # strategy:
    #   matrix:
    #     os: [ARM64]
    #     include:
    #       - os: ARM64
    #         release_suffix: mac-arm64
    # runs-on: ${{ matrix.os }}
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   - name: Run Mac Build ARM
    #     if: matrix.os == 'ARM64'
    #     run: |
    #       brew install crystal libssh2
    #       shards install --without-development
    #       crystal build src/hetzner-k3s.cr --release
    #       chmod +x hetzner-k3s
    #       cp hetzner-k3s hetzner-k3s-${{ matrix.release_suffix }}

    #   - name: Release
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       # tag_name: ${{ needs.create_release.outputs.tag-name }}
    #       files: hetzner-k3s-${{ matrix.release_suffix }}



