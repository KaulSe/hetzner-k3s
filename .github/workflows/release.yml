name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release_x64:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            release_suffix: mac-x64
          # - os: ubuntu-latest
          #   release_suffix: ubuntu
          # - os: windows-latest
          #   release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: '2.7.1'

      - name: Run Mac Build x64
        if: matrix.os == 'macos-latest'
        run: |
          brew install squashfs openssl@1.1
          wget https://github.com/pmq20/ruby-packer/releases/download/darwin-x64/rubyc
          chmod +x rubyc
          ./rubyc -r ./ -o ./hetzner-k3s-${{ matrix.release_suffix }} exe/hetzner-k3s --openssl-dir=$(openssl version -d | awk -F'"' '$0=$2')
          chmod +x ./hetzner-k3s-${{ matrix.release_suffix }}

      # - name: Run Linux Build
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     wget https://gw.alipayobjects.com/os/enclose-prod/1fd23e6b-d48f-4ed0-94dd-f0f539960253/rubyc-v0.4.0-linux-x64.gz
      #     gunzip rubyc-v0.4.0-linux-x64.gz
      #     chmod +x rubyc-v0.4.0-linux-x64
      #     ./rubyc-v0.4.0-linux-x64 -r ./ -o ./hetzner-k3s-${{ matrix.release_suffix }} exe/hetzner-k3s --openssl-dir=$(openssl version -d | awk -F'"' '$0=$2')
      #     chmod +x ./hetzner-k3s-${{ matrix.release_suffix }}

      # - name: Run Windows Build
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     choco install --no-progress squashfs
      #     choco install wget
      #     choco install strawberryperl
      #     echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
      #     wget https://github.com/pmq20/ruby-packer/releases/download/windows-x64/rubyc.exe
      #     call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      #     rubyc.exe  -r ./ -o ./hetzner-k3s-${{ matrix.release_suffix }} exe/hetzner-k3s

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: hetzner-k3s-${{ matrix.release_suffix }}


  build_release_arm:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ARM64]
        include:
          - os: ARM64
            release_suffix: mac-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Mac Build ARM
        if: matrix.os == 'ARM64'
        run: |
          wget https://github.com/pmq20/ruby-packer/releases/download/darwin-x64/rubyc
          chmod +x rubyc
          ./rubyc -r ./ -o ./hetzner-k3s-${{ matrix.release_suffix }} exe/hetzner-k3s --openssl-dir=$(openssl version -d | awk -F'"' '$0=$2')
          chmod +x ./hetzner-k3s-${{ matrix.release_suffix }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: hetzner-k3s-${{ matrix.release_suffix }}



